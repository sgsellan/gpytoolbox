name: Pip build

on:
  push:
    branches:    
      - main
  pull_request:
    branches:
      - main

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v3
      with:
        path: dist/*.tar.gz

  build_wheels:
    strategy:
      fail-fast: false
      matrix:
        cpversion: ["cp36", "cp37", "cp38", "cp39", "cp310", "cp311", "cp312"]
        os: 
          - runs-on: ubuntu-latest
            cibw-arch: manylinux_x86_64
            cibw-platform: manylinux2014
          - runs-on: macos-latest
            cibw-arch: macosx_x86_64
            cibw-platform: macosx_x86_64
          - runs-on: macos-latest
            cibw-arch: macosx_arm64
            cibw-platform: macosx_arm64
          - runs-on: windows-latest
            cibw-arch: win_amd64
            cibw-platform: win_amd64
        exclude:
          - os: { runs-on: macos-latest, cibw-arch: macosx_arm64 }
            cpversion: "cp36"
          - os: { runs-on: macos-latest, cibw-arch: macosx_arm64 }
            cpversion: "cp37"

    name: Build wheels ${{ matrix.cpversion }}-${{ matrix.os.cibw-arch }}
    runs-on: ${{ matrix.os.runs-on }}

    env:
      CIBW_BUILD_VERBOSITY: 3
      CIBW_BEFORE_BUILD_LINUX: "yum install -y libXrandr libXrandr-devel libXinerama libXinerama-devel libXcursor libXcursor-devel libXi libXi-devel"
      CIBW_BUILD: "${{ matrix.cpversion }}-${{ matrix.os.cibw-arch }}"
      CIBW_ENVIRONMENT: "MAX_JOBS=2"
      CIBW_ARCHS_MACOS: "x86_64 arm64 universal2"
      CIBW_ENVIRONMENT_MACOS: "CMAKE_OSX_ARCHITECTURES='${{ matrix.os.cibw-arch == 'macosx_x86_64' && 'x86_64' || matrix.os.cibw-arch == 'macosx_arm64' && 'arm64' || matrix.os.cibw-arch == 'macosx_universal2' && 'arm64;x86_64' || '' }}'"
      MACOSX_DEPLOYMENT_TARGET: 10.16
      CIBW_PLATFORM: ${{ matrix.os.cibw-platform }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.cpversion }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel==2.17.0

      - name: Build wheels
        run: cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v3
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: |
            ./wheelhouse/*.whl 
            ./wheelhouse/*.tar.gz 
